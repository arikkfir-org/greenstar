{{- $prefix := include "greenstar.prefix" . -}}
{{- $componentName := "ratesjob" -}}
{{- $serviceAccountName := printf "%s-%s" $prefix $componentName -}}
{{- $configMapName := printf "%s-%s" $prefix $componentName -}}
{{- /*------------------------------------------------------------------------------------------------------------*/ -}}
---

apiVersion: v1
kind: ServiceAccount
metadata:
  {{- if not (empty .Values.ratesjob.rbac.annotations) }}
  annotations:
    {{ range $name, $value := .Values.ratesjob.rbac.annotations -}}
    {{ $name }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ $serviceAccountName | quote }}

---

apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ printf "%s-%s" $prefix $componentName | quote }}
spec:
  schedule: {{ required "Currency rates job schedule is required" .Values.ratesjob.schedule | quote }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "greenstar.commonLabels" . | nindent 12 }}
            app.kubernetes.io/component: {{ $componentName | quote }}
        spec:

          initContainers:

            # Wait for GraphQL server to be available
            - image: alpine/curl:8.14.1
              args:
                - --fail-with-body
                - --location
                - --silent
                - --show-error
                - --verbose
                - --header
                - "apollo-require-preflight: true"
                - "$(GRAPHQL_API_URL)/graphql?query=%7B__typename%7D"
              env:
                - name: GRAPHQL_API_URL
                  value: http://greenstar-server/graphql
              name: wait-for-graphql-server
              resources:
                limits:
                  cpu: "100m"
                  memory: "32Mi"
                requests:
                  cpu: "100m"
                  memory: "16Mi"

          containers:
            - env:
                - name: GRAPHQL_API_URL
                  value: http://greenstar-server/graphql
                {{- range $key, $value := .Values.ratesjob.extraEnv }}
                - name: {{ $key | quote }}
                  {{ toYaml $value | nindent 18 }}
                {{- end }}
              image: {{ printf "%s:%s" .Values.ratesjob.image.repository (.Values.ratesjob.image.tag | default .Chart.AppVersion) | quote }}
              name: ratesjob
              resources:
                limits:
                  cpu: {{ required "Currency rates job CPU limit is required" .Values.ratesjob.resources.limits.cpu | quote }}
                  memory: {{ required "Currency rates job RAM limit is required" .Values.ratesjob.resources.limits.memory | quote }}
                requests:
                  cpu: {{ required "Currency rates job CPU request is required" .Values.ratesjob.resources.requests.cpu | quote }}
                  memory: {{ required "Currency rates job RAM request is required" .Values.ratesjob.resources.requests.memory | quote }}
          restartPolicy: OnFailure
          enableServiceLinks: false
          serviceAccountName: {{ $serviceAccountName | quote }}

---

apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-delete, post-rollback
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation # TODO: ,hook-succeeded
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ printf "%s-%s" $prefix $componentName | quote }}
spec:
  activeDeadlineSeconds: 60
  backoffLimit: 3
  template:
    metadata:
      labels:
        {{- include "greenstar.commonLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ $componentName | quote }}
    spec:

      initContainers:

        # Wait for GraphQL server to be available
        - image: alpine/curl:8.14.1
          args:
            - --fail-with-body
            - --location
            - --silent
            - --show-error
            - --verbose
            - --header
            - "apollo-require-preflight: true"
            - "$(GRAPHQL_API_URL)/graphql?query=%7B__typename%7D"
          env:
            - name: GRAPHQL_API_URL
              value: http://greenstar-server/graphql
          name: wait-for-graphql-server
          resources:
            limits:
              cpu: "100m"
              memory: "32Mi"
            requests:
              cpu: "100m"
              memory: "16Mi"

      containers:
        - env:
            - name: GRAPHQL_API_URL
              value: http://greenstar-server/graphql
            {{- range $key, $value := .Values.ratesjob.extraEnv }}
            - name: {{ $key | quote }}
              {{ toYaml $value | nindent 14 }}
            {{- end }}
          image: {{ printf "%s:%s" .Values.ratesjob.image.repository (.Values.ratesjob.image.tag | default .Chart.AppVersion) | quote }}
          name: ratesjob
          resources:
            limits:
              cpu: {{ required "Currency rates job CPU limit is required" .Values.ratesjob.resources.limits.cpu | quote }}
              memory: {{ required "Currency rates job RAM limit is required" .Values.ratesjob.resources.limits.memory | quote }}
            requests:
              cpu: {{ required "Currency rates job CPU request is required" .Values.ratesjob.resources.requests.cpu | quote }}
              memory: {{ required "Currency rates job RAM request is required" .Values.ratesjob.resources.requests.memory | quote }}
      restartPolicy: OnFailure
      enableServiceLinks: false
      serviceAccountName: {{ $serviceAccountName | quote }}
